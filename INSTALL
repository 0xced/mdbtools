Basic Installation - from a packaged tarball (.tgz)
===================================================

See below if you are installing from git.

   $ ./configure 
   $ make 

or for a complete install (requires bison, flex, and unixODBC):

   $ ./configure --enable-sql --with-unixodbc=/usr/local
   $ make 

This will build some useful utilities:

mdb-ver    -- prints the version (JET 3 or 4) of an mdb file
mdb-dump   -- simple hex dump utility that I've been using to look at mdb files
mdb-schema -- prints DDL for the specified table
mdb-export -- export table to CSV format
mdb-tables -- a simple dump of table names to be used with shell scripts
mdb-header -- generates a C header to be used in exporting mdb data to a C prog.
mdb-parsecvs -- generates a C program given a CSV file made with mdb-export
mdb-sql    -- if --enable-sql is specified, a simple SQL engine (also used by 
              ODBC and gmdb).
gmdb2      -- a graphical utility to browse MDB files.

And some utilities useful for debugging:

prcat      -- prints the catalog table from an mdb file.
prkkd      -- dump of information about design view data given the offset to it.
prtable    -- dump of a table definition.
prdata     -- dump of the data given a table name.
prole      -- dump of ole columns given a table name and sargs.

Once MDB Tools has been compiled, libmdb.[so|a] will be in the src/libmdb 
directory and the utility programs will be in the src/util directory.

You can then run 'make install' as root to install (to /usr/local by default).
Some systems will also need the ld cache to be updated after installation;
You can do that running 'ldconfig' as root.


Installation Options
====================

configure can be passed any of the following flags to turn on other 
capabilities.  Note that the options --with-unixodbc and --with-iodbc are
mutually exclusive.

--enable-sql     will cause the SQL engine to be built, you must have flex 
                 and bison (or yacc) installed for this option.
--with-unixodbc  specifies the location of the unixODBC driver manager and 
                 causes the unixODBC driver to be built.
--with-iodbc     specifies the location of the iODBC driver manager and 
                 causes the iODBC driver to be built.

If you want to build the html version of the docbook documentation, you need to
set the environment variable DOCBOOK_DSL to the modular dsl translation file.
For exemple, before configure, you need something like:

   $ export DOCBOOK_DSL=/usr/share/sgml/docbook/stylesheet/dsssl/modular/html/docbook.dsl

Installation from sources
=========================

First, you must have reasonably current installations of:
	libtool
	automake
	autoconf
If you don't you should install them first.  Sources are available at
ftp.gnu.org.

You will also need txt2man in order to build the man pages. Source is available
at http://mvertes.free.fr/download/.

Second, download the sources from github:

   $ git clone git://github.com/brianb/mdbtools.git

Third, run autogen.sh to configure everything:

   $ ./autogen.sh
	-- This will run libtoolize, automake, and autoconf.

Note: FreeBSD systems, as of the time of this writing, have an old version of
libtool (1.3.4) in the ports collection.  It works, but requires the presence
of acinclude.m4 in the distribution, which is why it is included.  If your
system has a more up-to-date version (1.4.2, at this date), this file is not
needed and, in fact, causes an error when autoconf is run:
	./ltconfig: ./ltconfig: No such file or directory
	configure: error: libtool configure failed	
If you get this error message, delete the file "acinclude.m4" and run
autogen.sh again.

At this point, you should resume the instructions at the beginning of this
file.
